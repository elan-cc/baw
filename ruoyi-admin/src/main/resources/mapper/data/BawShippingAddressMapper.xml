<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.web.mapper.BawShippingAddressMapper">

    <resultMap type="BawShippingAddress" id="BawShippingAddressResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="receiver"    column="receiver"    />
        <result property="phone"    column="phone"    />
        <result property="provinceCode"    column="province_code"    />
        <result property="provinceName"    column="province_name"    />
        <result property="cityCode"    column="city_code"    />
        <result property="cityName"    column="city_name"    />
        <result property="address"    column="address"    />
        <result property="label"    column="label"    />
        <result property="isDefault"    column="is_default"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectBawShippingAddressVo">
        select id, user_id, receiver, phone, province_code, province_name, city_code, city_name, address, label, is_default, create_time, update_time from baw_shipping_address
    </sql>

    <select id="selectBawShippingAddressList" parameterType="BawShippingAddress" resultMap="BawShippingAddressResult">
        <include refid="selectBawShippingAddressVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="receiver != null  and receiver != ''"> and receiver = #{receiver}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="provinceCode != null  and provinceCode != ''"> and province_code = #{provinceCode}</if>
            <if test="provinceName != null  and provinceName != ''"> and province_name like concat('%', #{provinceName}, '%')</if>
            <if test="cityCode != null  and cityCode != ''"> and city_code = #{cityCode}</if>
            <if test="cityName != null  and cityName != ''"> and city_name like concat('%', #{cityName}, '%')</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
            <if test="label != null  and label != ''"> and label = #{label}</if>
            <if test="isDefault != null "> and is_default = #{isDefault}</if>
        </where>
    </select>

    <select id="selectBawShippingAddressById" parameterType="integer" resultMap="BawShippingAddressResult">
        <include refid="selectBawShippingAddressVo"/>
        where id = #{id}
    </select>

    <insert id="insertBawShippingAddress" parameterType="BawShippingAddress" useGeneratedKeys="true" keyProperty="id">
        insert into baw_shipping_address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="receiver != null">receiver,</if>
            <if test="phone != null">phone,</if>
            <if test="provinceCode != null">province_code,</if>
            <if test="provinceName != null">province_name,</if>
            <if test="cityCode != null">city_code,</if>
            <if test="cityName != null">city_name,</if>
            <if test="address != null">address,</if>
            <if test="label != null">label,</if>
            <if test="isDefault != null">is_default,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="receiver != null">#{receiver},</if>
            <if test="phone != null">#{phone},</if>
            <if test="provinceCode != null">#{provinceCode},</if>
            <if test="provinceName != null">#{provinceName},</if>
            <if test="cityCode != null">#{cityCode},</if>
            <if test="cityName != null">#{cityName},</if>
            <if test="address != null">#{address},</if>
            <if test="label != null">#{label},</if>
            <if test="isDefault != null">#{isDefault},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBawShippingAddress" parameterType="BawShippingAddress">
        update baw_shipping_address
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="receiver != null">receiver = #{receiver},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="provinceCode != null">province_code = #{provinceCode},</if>
            <if test="provinceName != null">province_name = #{provinceName},</if>
            <if test="cityCode != null">city_code = #{cityCode},</if>
            <if test="cityName != null">city_name = #{cityName},</if>
            <if test="address != null">address = #{address},</if>
            <if test="label != null">label = #{label},</if>
            <if test="isDefault != null">is_default = #{isDefault},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBawShippingAddressById" parameterType="integer">
        delete from baw_shipping_address where id = #{id}
    </delete>

    <delete id="deleteBawShippingAddressByIds" parameterType="String">
        delete from baw_shipping_address where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
		<update id="toNotDefault">
        update baw_shipping_address
        set is_default = 0
        where user_id = #{userId}
		</update>
</mapper>
